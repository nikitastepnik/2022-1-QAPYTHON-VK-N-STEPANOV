{
  "name": "Проверка создания пользователя по password, длина которого больше допустимого (> 255 символов)",
  "status": "failed",
  "statusDetails": {
    "message": "AssertionError: Код ответа приложения должен быть 400\nassert 500 == 400\n  +500\n  -400",
    "trace": "self = <test_api.TestApiAuthorizedUser object at 0x7fb01b9ec880>\ncreate_user_data_with_middle_name = {'email': 'XNUiMFp2ch5swD8@gmail.com', 'middle_name': 'SamanthaLee', 'name': 'Samantha', 'password': 'eU4OvoJEGSkh7ahK...QwbtJ6e0S9YleVSlb3ZfhgBB4n0CCNyepoazb28Mt0TUyOYeP5tcCMWTVcND9wTQweecSdm23NBMamppTNEiuwl4YgIs6SxQMea9Q3iQywjPN6cf', ...}\n\n    @allure.title(\"Проверка создания пользователя по password, длина которого больше допустимого (> 255 символов)\")\n    @pytest.mark.API\n    def test_post_create_user_invalid_data_password_length_more_than_acceptable_bug(self,\n                                                                                    create_user_data_with_middle_name):\n        \"\"\"\n         Тестирование: Добавление пользователя с неккоректными данными\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, заменить password на password, длиной больше\n         допустимого (больше чем 255 символов)\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (-)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 500 (\"INTERNAL SERVER ERROR\")\n         Пользователь НЕ добавляется в БД\n         \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data[\"password\"] = RandomGenerate.generate_random_password(256, 300)\n    \n        response = self.post_create_user(complex_user_data)\n        self.mysql.session.commit()\n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['email']).first()\n    \n>       assert response.status_code == 400, \"Код ответа приложения должен быть 400\"\nE       AssertionError: Код ответа приложения должен быть 400\nE       assert 500 == 400\nE         +500\nE         -400\n\ncomplex_user_data = {'email': 'XNUiMFp2ch5swD8@gmail.com', 'middle_name': 'SamanthaLee', 'name': 'Samantha', 'password': 'eU4OvoJEGSkh7ahK...QwbtJ6e0S9YleVSlb3ZfhgBB4n0CCNyepoazb28Mt0TUyOYeP5tcCMWTVcND9wTQweecSdm23NBMamppTNEiuwl4YgIs6SxQMea9Q3iQywjPN6cf', ...}\ncreate_user_data_with_middle_name = {'email': 'XNUiMFp2ch5swD8@gmail.com', 'middle_name': 'SamanthaLee', 'name': 'Samantha', 'password': 'eU4OvoJEGSkh7ahK...QwbtJ6e0S9YleVSlb3ZfhgBB4n0CCNyepoazb28Mt0TUyOYeP5tcCMWTVcND9wTQweecSdm23NBMamppTNEiuwl4YgIs6SxQMea9Q3iQywjPN6cf', ...}\nresponse   = <Response [500]>\nself       = <test_api.TestApiAuthorizedUser object at 0x7fb01b9ec880>\nuser_db    = None\n\ncode/api_myapp/test/test_api.py:456: AssertionError"
  },
  "description": "\n         Тестирование: Добавление пользователя с неккоректными данными\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, заменить password на password, длиной больше\n         допустимого (больше чем 255 символов)\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (-)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 500 (\"INTERNAL SERVER ERROR\")\n         Пользователь НЕ добавляется в БД\n         ",
  "steps": [
    {
      "name": "Выполняем POST запрос '/api/user'",
      "status": "passed",
      "steps": [
        {
          "name": "Выполняем запрос",
          "status": "passed",
          "parameters": [
            {
              "name": "method",
              "value": "'POST'"
            },
            {
              "name": "location",
              "value": "'/api/user'"
            },
            {
              "name": "headers",
              "value": "{'Content-Type': 'application/json'}"
            },
            {
              "name": "data",
              "value": "None"
            },
            {
              "name": "params",
              "value": "None"
            },
            {
              "name": "json",
              "value": "{'username': 'Ygq4iULp', 'password': 'eU4OvoJEGSkh7ahKxRZdtzjYx139RYgtUb1Az7wvDFuv24G8IWobmysQSBY6D1cA3GNHvVv0uDPCV9Xd9cWBdvVcRV8VsJNzeoHyAmvYcwT673iCjoP5tvib8DSe540Oz7czbcZpmlEK7jbBQ1BQZOwK8zjtUlmaVjpkaQwbtJ6e0S9YleVSlb3ZfhgBB4n0CCNyepoazb28Mt0TUyOYeP5tcCMWTVcND9wTQweecSdm23NBMamppTNEiuwl4YgIs6SxQMea9Q3iQywjPN6cf', 'email': 'XNUiMFp2ch5swD8@gmail.com', 'name': 'Samantha', 'surname': 'Lee', 'middle_name': 'SamanthaLee'}"
            }
          ],
          "start": 1653294457943,
          "stop": 1653294457957
        }
      ],
      "parameters": [
        {
          "name": "complex_data",
          "value": "{'username': 'Ygq4iULp', 'password': 'eU4OvoJEGSkh7ahKxRZdtzjYx139RYgtUb1Az7wvDFuv24G8IWobmysQSBY6D1cA3GNHvVv0uDPCV9Xd9cWBdvVcRV8VsJNzeoHyAmvYcwT673iCjoP5tvib8DSe540Oz7czbcZpmlEK7jbBQ1BQZOwK8zjtUlmaVjpkaQwbtJ6e0S9YleVSlb3ZfhgBB4n0CCNyepoazb28Mt0TUyOYeP5tcCMWTVcND9wTQweecSdm23NBMamppTNEiuwl4YgIs6SxQMea9Q3iQywjPN6cf', 'email': 'XNUiMFp2ch5swD8@gmail.com', 'name': 'Samantha', 'surname': 'Lee', 'middle_name': 'SamanthaLee'}"
        }
      ],
      "start": 1653294457943,
      "stop": 1653294457957
    }
  ],
  "start": 1653294457942,
  "stop": 1653294457962,
  "uuid": "5c8b469d-b08e-44bf-940a-6f5d62443995",
  "historyId": "86f61b93a791be4fea1043394d405e3d",
  "testCaseId": "d870c4840d6473957290a1f2dbec273e",
  "fullName": "code.api_myapp.test.test_api.TestApiAuthorizedUser#test_post_create_user_invalid_data_password_length_more_than_acceptable_bug",
  "labels": [
    {
      "name": "tag",
      "value": "API"
    },
    {
      "name": "parentSuite",
      "value": "code.api_myapp.test"
    },
    {
      "name": "suite",
      "value": "test_api"
    },
    {
      "name": "subSuite",
      "value": "TestApiAuthorizedUser"
    },
    {
      "name": "host",
      "value": "deb0c69e5821"
    },
    {
      "name": "thread",
      "value": "1-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "code.api_myapp.test.test_api"
    }
  ]
}