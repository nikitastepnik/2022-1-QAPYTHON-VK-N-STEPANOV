{
  "name": "БАГ! Проверка создания пользователя по username, длина которого больше допустимого (> 16 символов)",
  "status": "failed",
  "statusDetails": {
    "message": "AssertionError: Код ответа приложения должен быть 400\nassert 500 == 400\n  +500\n  -400",
    "trace": "self = <test_api.TestApiAuthorizedUser object at 0x7f859fe034c0>\ncreate_user_data_with_middle_name = {'email': 'M9QbX7f5leC@vk.com', 'middle_name': 'DeniseYu', 'name': 'Denise', 'password': 'oUpj0iaXbOWU04p', ...}\n\n    @allure.title(\"БАГ! Проверка создания пользователя по username, длина которого больше допустимого (> 16 символов)\")\n    @pytest.mark.API\n    def test_post_create_user_invalid_data_username_length_more_than_acceptable_bug(self,\n                                                                                    create_user_data_with_middle_name):\n        \"\"\"\n         Тестирование: Добавление пользователя с неккоректными данными\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, заменить username на слово, длиной больше\n         допустимого (больше чем 16 символов)\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (-)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 500 (\"INTERNAL SERVER ERROR\")\n         Пользователь НЕ добавляется в БД\n         \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data[\"username\"] = RandomGenerate.generate_random_user_name(17, 70)\n    \n        response = self.post_create_user(complex_user_data)\n        self.mysql.session.commit()\n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['email']).first()\n    \n>       assert response.status_code == 400, \"Код ответа приложения должен быть 400\"\nE       AssertionError: Код ответа приложения должен быть 400\nE       assert 500 == 400\nE         +500\nE         -400\n\ncomplex_user_data = {'email': 'M9QbX7f5leC@vk.com', 'middle_name': 'DeniseYu', 'name': 'Denise', 'password': 'oUpj0iaXbOWU04p', ...}\ncreate_user_data_with_middle_name = {'email': 'M9QbX7f5leC@vk.com', 'middle_name': 'DeniseYu', 'name': 'Denise', 'password': 'oUpj0iaXbOWU04p', ...}\nresponse   = <Response [500]>\nself       = <test_api.TestApiAuthorizedUser object at 0x7f859fe034c0>\nuser_db    = None\n\ncode/api_myapp/test/test_api.py:400: AssertionError"
  },
  "description": "\n         Тестирование: Добавление пользователя с неккоректными данными\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, заменить username на слово, длиной больше\n         допустимого (больше чем 16 символов)\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (-)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 500 (\"INTERNAL SERVER ERROR\")\n         Пользователь НЕ добавляется в БД\n         ",
  "steps": [
    {
      "name": "Выполняем POST запрос '/api/user'",
      "status": "passed",
      "steps": [
        {
          "name": "Выполняем запрос",
          "status": "passed",
          "parameters": [
            {
              "name": "method",
              "value": "'POST'"
            },
            {
              "name": "location",
              "value": "'/api/user'"
            },
            {
              "name": "headers",
              "value": "{'Content-Type': 'application/json'}"
            },
            {
              "name": "data",
              "value": "None"
            },
            {
              "name": "params",
              "value": "None"
            },
            {
              "name": "json",
              "value": "{'username': '4170oBfs3aMJobumuXk7vPJHhVjUztXHocQiQT0V', 'password': 'oUpj0iaXbOWU04p', 'email': 'M9QbX7f5leC@vk.com', 'name': 'Denise', 'surname': 'Yu', 'middle_name': 'DeniseYu'}"
            }
          ],
          "start": 1653294613676,
          "stop": 1653294613694
        }
      ],
      "parameters": [
        {
          "name": "complex_data",
          "value": "{'username': '4170oBfs3aMJobumuXk7vPJHhVjUztXHocQiQT0V', 'password': 'oUpj0iaXbOWU04p', 'email': 'M9QbX7f5leC@vk.com', 'name': 'Denise', 'surname': 'Yu', 'middle_name': 'DeniseYu'}"
        }
      ],
      "start": 1653294613676,
      "stop": 1653294613694
    }
  ],
  "start": 1653294613675,
  "stop": 1653294613700,
  "uuid": "c9fe0ea0-769d-4db8-9f1f-5b0c66df353f",
  "historyId": "01c9646c660ece4170cd17732453e54d",
  "testCaseId": "c4c7638572c2db4d5b6a7e5e38d14966",
  "fullName": "code.api_myapp.test.test_api.TestApiAuthorizedUser#test_post_create_user_invalid_data_username_length_more_than_acceptable_bug",
  "labels": [
    {
      "name": "tag",
      "value": "API"
    },
    {
      "name": "parentSuite",
      "value": "code.api_myapp.test"
    },
    {
      "name": "suite",
      "value": "test_api"
    },
    {
      "name": "subSuite",
      "value": "TestApiAuthorizedUser"
    },
    {
      "name": "host",
      "value": "f32cf065649b"
    },
    {
      "name": "thread",
      "value": "9-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "code.api_myapp.test.test_api"
    }
  ]
}