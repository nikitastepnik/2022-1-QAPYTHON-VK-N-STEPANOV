{"name": "Проверка создания пользователя без email", "status": "failed", "statusDetails": {"message": "AssertionError: Тело ответа приложения не соотв. ожидаемому\nassert {'detail': 's...086/api/user'} == {'detail': \"N...us': 'failed'}\n  Differing items:\n  {'status': 'error'} != {'status': 'failed'}\n  {'detail': 'session not present'} != {'detail': \"Not exists required field ('email')\"}\n  Left contains 1 more item:\n  {'url': 'http://my_app:8086/api/user'}\n  Full diff:\n    {...\n  \n  ...Full output truncated (9 lines hidden), use '-vv' to show", "trace": "self = <test_api.TestApiAuthorizedUser object at 0x7f1d87da7bb0>\ncreate_user_data_with_middle_name = {'middle_name': 'BrianClark', 'name': 'Brian', 'password': 'kADdPjmg0aS', 'surname': 'Clark', ...}\n\n    @allure.title(\"Проверка создания пользователя без email\")\n    @pytest.mark.API\n    def test_post_create_user_without_required_data_email(self, create_user_data_with_middle_name):\n        \"\"\"\n         Тестирование: Добавление пользователя (без email)\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, удаление из пользов. данных поля email\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (+)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 400 (\"BAD REQUEST\")\n         Пользователь НЕ добавляется в БД\n         \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data.pop('email')\n        response = self.post_create_user(complex_user_data)\n        self.mysql.session.commit()\n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['username']).first()\n    \n        assert user_db is None, \"Пользователь не должен добавляться в БД\"\n>       assert json.loads(response.text) == {\n            \"detail\": \"Not exists required field ('email')\",\n            \"status\": \"failed\"\n        }, \"Тело ответа приложения не соотв. ожидаемому\"\nE       AssertionError: Тело ответа приложения не соотв. ожидаемому\nE       assert {'detail': 's...086/api/user'} == {'detail': \"N...us': 'failed'}\nE         Differing items:\nE         {'status': 'error'} != {'status': 'failed'}\nE         {'detail': 'session not present'} != {'detail': \"Not exists required field ('email')\"}\nE         Left contains 1 more item:\nE         {'url': 'http://my_app:8086/api/user'}\nE         Full diff:\nE           {...\nE         \nE         ...Full output truncated (9 lines hidden), use '-vv' to show\n\ncomplex_user_data = {'middle_name': 'BrianClark', 'name': 'Brian', 'password': 'kADdPjmg0aS', 'surname': 'Clark', ...}\ncreate_user_data_with_middle_name = {'middle_name': 'BrianClark', 'name': 'Brian', 'password': 'kADdPjmg0aS', 'surname': 'Clark', ...}\nresponse   = <Response [401]>\nself       = <test_api.TestApiAuthorizedUser object at 0x7f1d87da7bb0>\nuser_db    = None\n\ncode/api_myapp/test/test_api.py:238: AssertionError"}, "description": "\n         Тестирование: Добавление пользователя (без email)\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, удаление из пользов. данных поля email\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (+)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 400 (\"BAD REQUEST\")\n         Пользователь НЕ добавляется в БД\n         ", "steps": [{"name": "Выполняем POST запрос '/api/user'", "status": "passed", "steps": [{"name": "Выполняем запрос", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'/api/user'"}, {"name": "headers", "value": "{'Content-Type': 'application/json'}"}, {"name": "data", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "{'username': 'X4ZynWYWfh', 'password': 'kADdPjmg0aS', 'name': 'Brian', 'surname': 'Clark', 'middle_name': 'BrianClark'}"}], "start": 1653169728796, "stop": 1653169728802}], "parameters": [{"name": "complex_data", "value": "{'username': 'X4ZynWYWfh', 'password': 'kADdPjmg0aS', 'name': 'Brian', 'surname': 'Clark', 'middle_name': 'BrianClark'}"}], "start": 1653169728796, "stop": 1653169728802}], "start": 1653169728796, "stop": 1653169728808, "uuid": "f9f97dd5-1826-4883-bee7-ca8dc4fbd146", "historyId": "4b5a0eeea449da724d80efa1a84b0735", "testCaseId": "21741031fdbe0058845f11b0d903c8d5", "fullName": "code.api_myapp.test.test_api.TestApiAuthorizedUser#test_post_create_user_without_required_data_email", "labels": [{"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "code.api_myapp.test"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiAuthorizedUser"}, {"name": "host", "value": "746153c29c11"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.api_myapp.test.test_api"}]}