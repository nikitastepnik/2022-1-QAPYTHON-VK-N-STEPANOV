{"name": "Страница регистрации. Минимальная длина username. Этот тест имеет flucky сообщение!", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Минимально д...та сейчас: 2.' == 'Please lengt... characters).'\n  - Please lengthen this text to 6 characters or more (you are currently using 2 characters).\n  + Минимально допустимое количество символов: 6. Длина текста сейчас: 2.", "trace": "self = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f3488228130>\ncreate_user_data_with_middle_name = {'email': 'UF0J8V9SqHE3@gmail.com', 'middle_name': 'CharlesRodriguez', 'name': 'Charles', 'password': '0l4E3bS8FQZJr', ...}\n\n    @allure.title('Страница регистрации. Минимальная длина username. Этот тест имеет flucky сообщение!')\n    @pytest.mark.UI\n    def test_reg_page_validation_min_length_username_bug(self, create_user_data_with_middle_name):\n        \"\"\"\n          Тестирование: Регистрация. Длина username меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username уже\n          используется (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n        \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data[\"username\"] = RandomGenerate.generate_random_password(1, 5)\n        len_username_as_str = str(len(complex_user_data[\"username\"]))\n        self.registration_page.registration(complex_user_data)\n        self.mysql.session.commit()\n    \n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['username']).first()\n    \n        assert self.driver.current_url == self.registration_page.url, f\"URL должен быть 'http://{APP_HOST}:{APP_PORT}/reg'\"\n>       assert f'Минимально допустимое количество символов: 6. Длина текста сейчас: {len_username_as_str}.' == \\\n               self.registration_page.find_pop_up_empty_req_field(RegistrationPageLocators.QUERY_PLACEHOLDER_USER_NAME)\nE       AssertionError: assert 'Минимально д...та сейчас: 2.' == 'Please lengt... characters).'\nE         - Please lengthen this text to 6 characters or more (you are currently using 2 characters).\nE         + Минимально допустимое количество символов: 6. Длина текста сейчас: 2.\n\ncomplex_user_data = {'email': 'UF0J8V9SqHE3@gmail.com', 'middle_name': 'CharlesRodriguez', 'name': 'Charles', 'password': '0l4E3bS8FQZJr', ...}\ncreate_user_data_with_middle_name = {'email': 'UF0J8V9SqHE3@gmail.com', 'middle_name': 'CharlesRodriguez', 'name': 'Charles', 'password': '0l4E3bS8FQZJr', ...}\nlen_username_as_str = '2'\nself       = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f3488228130>\nuser_db    = None\n\ncode/ui_myapp/tests/test_ui.py:552: AssertionError"}, "description": "\n          Тестирование: Регистрация. Длина username меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username уже\n          используется (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n        ", "steps": [{"name": "Попытка зарегистрироваться", "status": "passed", "steps": [{"name": "Переходим на необходимую страницу", "status": "passed", "parameters": [{"name": "timeout", "value": "15"}], "start": 1653230252332, "stop": 1653230252342}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653230252342, "stop": 1653230252951}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "query", "value": "'eo'"}, {"name": "timeout", "value": "None"}], "start": 1653230252342, "stop": 1653230253115}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653230253115, "stop": 1653230253153}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "query", "value": "'0l4E3bS8FQZJr'"}, {"name": "timeout", "value": "None"}], "start": 1653230253115, "stop": 1653230253358}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653230253358, "stop": 1653230253391}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "query", "value": "'0l4E3bS8FQZJr'"}, {"name": "timeout", "value": "None"}], "start": 1653230253358, "stop": 1653230253588}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653230253589, "stop": 1653230253625}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "query", "value": "'Charles'"}, {"name": "timeout", "value": "None"}], "start": 1653230253588, "stop": 1653230253802}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653230253802, "stop": 1653230253839}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "query", "value": "'Rodriguez'"}, {"name": "timeout", "value": "None"}], "start": 1653230253802, "stop": 1653230254005}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653230254005, "stop": 1653230254040}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "query", "value": "'UF0J8V9SqHE3@gmail.com'"}, {"name": "timeout", "value": "None"}], "start": 1653230254005, "stop": 1653230254248}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653230254248, "stop": 1653230254284}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653230254248, "stop": 1653230254438}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653230254438, "stop": 1653230254468}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653230254438, "stop": 1653230254603}], "parameters": [{"name": "data", "value": "{'username': 'eo', 'password': '0l4E3bS8FQZJr', 'email': 'UF0J8V9SqHE3@gmail.com', 'name': 'Charles', 'surname': 'Rodriguez', 'middle_name': 'CharlesRodriguez'}"}, {"name": "middle_name_option", "value": "0"}, {"name": "empty_rep_password_option", "value": "0"}, {"name": "rep_password", "value": "0"}, {"name": "checkbox_option", "value": "1"}], "start": 1653230252018, "stop": 1653230254603}, {"name": "Смотрим pop-up validationMessage при пустом поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653230254619, "stop": 1653230254646}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}], "start": 1653230254619, "stop": 1653230254668}], "start": 1653230252018, "stop": 1653230254669, "uuid": "89c7d589-9bca-45c5-a00e-c10bbc4d510e", "historyId": "9322e5e7c61011e4dacda4f2e2bfddf9", "testCaseId": "dbba37b9fd190f59b8c837570f35f93c", "fullName": "code.ui_myapp.tests.test_ui.TestUIUnauthorizedUserRegistrationPage#test_reg_page_validation_min_length_username_bug", "labels": [{"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "code.ui_myapp.tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUIUnauthorizedUserRegistrationPage"}, {"name": "host", "value": "01975e629cc1"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.ui_myapp.tests.test_ui"}]}