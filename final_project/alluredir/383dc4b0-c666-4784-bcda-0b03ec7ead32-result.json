{"name": "Проверка создания пользователя с middle-name", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'username'", "trace": "self = <test_api.TestApiAuthorizedUser object at 0x7f1d87da7280>\ncreate_user_data_with_middle_name = {'email': 'B9eIkL95Nr5@mail.ru', 'middle_name': 'MariaBlankenship', 'name': 'Maria', 'password': '1KKfFdKJnqDKk', ...}\n\n    @allure.title(\"Проверка создания пользователя с middle-name\")\n    @pytest.mark.API\n    def test_post_create_user_with_middle_name_bug(self, create_user_data_with_middle_name):\n        \"\"\"\n         Тестирование: Добавление пользователя (c middle-name)\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных\n         Шаги:\n         1. Отправка запроса по API\n         2. Найти пользователя по email в БД\n         3. Удалить из БД ранее созданного пользователя\n         Ожидаемый результат:\n         Пользователь добавляется в БД с корректными данными (+)\n         Код ответа - 201 (\"Created\") (-)\n         Фактический результат:\n         Пользователь добавляется в БД с корректными данными\n         Код ответа - 210\n         \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        response = self.post_create_user(complex_user_data)\n        self.mysql.session.commit()\n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['email']).first()\n    \n        self.delete_user(complex_user_data[\"username\"])\n    \n>       assert user_db.username == complex_user_data['username'], f\"Никнеймы не совпадают: В БД {user_db.username}; \" \\\n                                                                  f\"Отправлено в request body \" \\\n                                                                  f\"{complex_user_data['username']}\"\nE       AttributeError: 'NoneType' object has no attribute 'username'\n\ncomplex_user_data = {'email': 'B9eIkL95Nr5@mail.ru', 'middle_name': 'MariaBlankenship', 'name': 'Maria', 'password': '1KKfFdKJnqDKk', ...}\ncreate_user_data_with_middle_name = {'email': 'B9eIkL95Nr5@mail.ru', 'middle_name': 'MariaBlankenship', 'name': 'Maria', 'password': '1KKfFdKJnqDKk', ...}\nresponse   = <Response [401]>\nself       = <test_api.TestApiAuthorizedUser object at 0x7f1d87da7280>\nuser_db    = None\n\ncode/api_myapp/test/test_api.py:109: AttributeError"}, "description": "\n         Тестирование: Добавление пользователя (c middle-name)\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных\n         Шаги:\n         1. Отправка запроса по API\n         2. Найти пользователя по email в БД\n         3. Удалить из БД ранее созданного пользователя\n         Ожидаемый результат:\n         Пользователь добавляется в БД с корректными данными (+)\n         Код ответа - 201 (\"Created\") (-)\n         Фактический результат:\n         Пользователь добавляется в БД с корректными данными\n         Код ответа - 210\n         ", "steps": [{"name": "Выполняем POST запрос '/api/user'", "status": "passed", "steps": [{"name": "Выполняем запрос", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'/api/user'"}, {"name": "headers", "value": "{'Content-Type': 'application/json'}"}, {"name": "data", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "{'username': 'LrmurUh9vH2uk', 'password': '1KKfFdKJnqDKk', 'email': 'B9eIkL95Nr5@mail.ru', 'name': 'Maria', 'surname': 'Blankenship', 'middle_name': 'MariaBlankenship'}"}], "start": 1653169728499, "stop": 1653169728504}], "parameters": [{"name": "complex_data", "value": "{'username': 'LrmurUh9vH2uk', 'password': '1KKfFdKJnqDKk', 'email': 'B9eIkL95Nr5@mail.ru', 'name': 'Maria', 'surname': 'Blankenship', 'middle_name': 'MariaBlankenship'}"}], "start": 1653169728499, "stop": 1653169728504}, {"name": "Выполняем DELETE запрос '/api/user/'LrmurUh9vH2uk''", "status": "passed", "steps": [{"name": "Выполняем запрос", "status": "passed", "parameters": [{"name": "method", "value": "'DELETE'"}, {"name": "location", "value": "'/api/user/LrmurUh9vH2uk'"}, {"name": "headers", "value": "None"}, {"name": "data", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "False"}], "start": 1653169728509, "stop": 1653169728513}], "parameters": [{"name": "username", "value": "'LrmurUh9vH2uk'"}], "start": 1653169728509, "stop": 1653169728514}], "start": 1653169728499, "stop": 1653169728514, "uuid": "b51ed83b-06fa-4d67-aa4b-9c8b8f8a3402", "historyId": "9cf23cc3cba1c157d4f200762bb9460c", "testCaseId": "cc002384ad2ac99c1d99c86c21c5d7c3", "fullName": "code.api_myapp.test.test_api.TestApiAuthorizedUser#test_post_create_user_with_middle_name_bug", "labels": [{"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "code.api_myapp.test"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiAuthorizedUser"}, {"name": "host", "value": "746153c29c11"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.api_myapp.test.test_api"}]}