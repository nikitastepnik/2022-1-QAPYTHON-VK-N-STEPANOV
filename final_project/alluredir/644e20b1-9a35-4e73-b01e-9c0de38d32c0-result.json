{"name": "Проверка создания пользователя по password, длина которого больше допустимого (> 255 символов)", "status": "failed", "statusDetails": {"message": "AssertionError: Код ответа приложения должен быть 400\nassert 500 == 400\n  +500\n  -400", "trace": "self = <test_api.TestApiAuthorizedUser object at 0x7f7ae380b760>\ncreate_user_data_with_middle_name = {'email': 'K123GNdM@vk.com', 'middle_name': 'HeidiHudson', 'name': 'Heidi', 'password': 'IP9QUenyWy0L6K0kRWzr8G8xNXfO6...I2IsVXYoANOHRtKhYFU42DFhl8N8YAACn0TzFc2yagfWjpppXbcPhEfphWVenhtPHRCDnKY02OmfsXGpdY0fsfS0RCW7lhJ5qhh4Dj0HJJwdnoWt', ...}\n\n    @allure.title(\"Проверка создания пользователя по password, длина которого больше допустимого (> 255 символов)\")\n    @pytest.mark.API\n    def test_post_create_user_invalid_data_password_length_more_than_acceptable_bug(self,\n                                                                                    create_user_data_with_middle_name):\n        \"\"\"\n         Тестирование: Добавление пользователя с неккоректными данными\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, заменить password на password, длиной больше\n         допустимого (больше чем 255 символов)\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (-)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 500 (\"INTERNAL SERVER ERROR\")\n         Пользователь НЕ добавляется в БД\n         \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data[\"password\"] = RandomGenerate.generate_random_password(256, 300)\n    \n        response = self.post_create_user(complex_user_data)\n        self.mysql.session.commit()\n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['email']).first()\n    \n>       assert response.status_code == 400, \"Код ответа приложения должен быть 400\"\nE       AssertionError: Код ответа приложения должен быть 400\nE       assert 500 == 400\nE         +500\nE         -400\n\ncomplex_user_data = {'email': 'K123GNdM@vk.com', 'middle_name': 'HeidiHudson', 'name': 'Heidi', 'password': 'IP9QUenyWy0L6K0kRWzr8G8xNXfO6...I2IsVXYoANOHRtKhYFU42DFhl8N8YAACn0TzFc2yagfWjpppXbcPhEfphWVenhtPHRCDnKY02OmfsXGpdY0fsfS0RCW7lhJ5qhh4Dj0HJJwdnoWt', ...}\ncreate_user_data_with_middle_name = {'email': 'K123GNdM@vk.com', 'middle_name': 'HeidiHudson', 'name': 'Heidi', 'password': 'IP9QUenyWy0L6K0kRWzr8G8xNXfO6...I2IsVXYoANOHRtKhYFU42DFhl8N8YAACn0TzFc2yagfWjpppXbcPhEfphWVenhtPHRCDnKY02OmfsXGpdY0fsfS0RCW7lhJ5qhh4Dj0HJJwdnoWt', ...}\nresponse   = <Response [500]>\nself       = <test_api.TestApiAuthorizedUser object at 0x7f7ae380b760>\nuser_db    = None\n\ncode/api_myapp/test/test_api.py:456: AssertionError"}, "description": "\n         Тестирование: Добавление пользователя с неккоректными данными\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных, заменить password на password, длиной больше\n         допустимого (больше чем 255 символов)\n         Шаги:\n         1. Отправка запроса по API\n         Ожидаемый результат:\n         Код ответа - 400 (\"BAD REQUEST\") (-)\n         Пользователь НЕ добавляется в БД (+)\n         Фактический результат:\n         Код ответа - 500 (\"INTERNAL SERVER ERROR\")\n         Пользователь НЕ добавляется в БД\n         ", "steps": [{"name": "Выполняем POST запрос '/api/user'", "status": "passed", "steps": [{"name": "Выполняем запрос", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'/api/user'"}, {"name": "headers", "value": "{'Content-Type': 'application/json'}"}, {"name": "data", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "{'username': 'mbzuX5n29F28AlWm', 'password': 'IP9QUenyWy0L6K0kRWzr8G8xNXfO65pQ3lriKUrPlCDuFcKJmqUchuNSjoy3SiHfdzQ3qHTTivsSxkDNIW46sjONvTVI1qXnUCJ6GYLAhjpKN7AJW3F3nGSphk7Qwqtz4oLIhJnOjJjx8B9VINW3jDrIIrzzxOn1byQjocZ6XWMnXzPRdr02I2IsVXYoANOHRtKhYFU42DFhl8N8YAACn0TzFc2yagfWjpppXbcPhEfphWVenhtPHRCDnKY02OmfsXGpdY0fsfS0RCW7lhJ5qhh4Dj0HJJwdnoWt', 'email': 'K123GNdM@vk.com', 'name': 'Heidi', 'surname': 'Hudson', 'middle_name': 'HeidiHudson'}"}], "start": 1653171776852, "stop": 1653171776862}], "parameters": [{"name": "complex_data", "value": "{'username': 'mbzuX5n29F28AlWm', 'password': 'IP9QUenyWy0L6K0kRWzr8G8xNXfO65pQ3lriKUrPlCDuFcKJmqUchuNSjoy3SiHfdzQ3qHTTivsSxkDNIW46sjONvTVI1qXnUCJ6GYLAhjpKN7AJW3F3nGSphk7Qwqtz4oLIhJnOjJjx8B9VINW3jDrIIrzzxOn1byQjocZ6XWMnXzPRdr02I2IsVXYoANOHRtKhYFU42DFhl8N8YAACn0TzFc2yagfWjpppXbcPhEfphWVenhtPHRCDnKY02OmfsXGpdY0fsfS0RCW7lhJ5qhh4Dj0HJJwdnoWt', 'email': 'K123GNdM@vk.com', 'name': 'Heidi', 'surname': 'Hudson', 'middle_name': 'HeidiHudson'}"}], "start": 1653171776852, "stop": 1653171776862}], "start": 1653171776852, "stop": 1653171776867, "uuid": "40943f82-4058-4e23-a2ec-8d4b61507f39", "historyId": "86f61b93a791be4fea1043394d405e3d", "testCaseId": "d870c4840d6473957290a1f2dbec273e", "fullName": "code.api_myapp.test.test_api.TestApiAuthorizedUser#test_post_create_user_invalid_data_password_length_more_than_acceptable_bug", "labels": [{"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "code.api_myapp.test"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiAuthorizedUser"}, {"name": "host", "value": "91011fa0eb27"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.api_myapp.test.test_api"}]}