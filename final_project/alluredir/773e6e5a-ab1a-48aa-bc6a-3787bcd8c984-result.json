{"name": "Авторизация с помощью неверных данных", "status": "failed", "statusDetails": {"message": "AssertionError: Код ответа приложения должен быть 401... Здесь что-то странное: отвечать  \n                                               200 - на неудачную авторизацию явно не ок, тем более - куки пустые; \n                                               кроме того бывает, \n                                               когда при неверной комбинации возвраащет 401\nassert 200 == 401\n  +200\n  -401", "trace": "self = <test_api.TestApiUnauthorizedUser object at 0x7f2ac39a8a60>\nlogin = 'nik', password = 'beast'\n\n    @allure.title(\"Авторизация с помощью неверных данных\")\n    @pytest.mark.API\n    @pytest.mark.parametrize('login, password', [('error', 'error'), ('nikita', 'testik'), ('nik', 'beast')])\n    def test_post_auth_invalid_data_bug(self, login, password):\n        \"\"\"\n         Тестирование: Авторизация с помощью неверных данных\n         Эндпоинт: POST http://127.0.0.1:8086/login\n         Предусловия: Пользователь не авторизован, для авторизации используется неверная комбинация логина/пароля;\n         рассмотреть варианты, когда логин/пароль действительно существуют в БД, однако второй элемент из комбинации\n         - нет\n         Шаги:\n         1. Отправить запрос по API для авторизации - POST http://127.0.0.1:8086/login\n         Ожидаемый результат:\n         Код ответа - 401 (\"UNAUTHORIZED\") (-)\n         Пользователь не сумел авторизоваться, сервер возвращает адекватную ошибку и сообщение (-)\n         Фактический результат:\n         Код ответа - 200 (\"OK\") (-)\n         Пользователь не сумел авторизоваться, сервер возвращает адекватную ошибку и сообщение (-)\n         \"\"\"\n        self.api_client.session.cookies.clear()\n    \n        data = {\n            'username': login,\n            'password': password\n        }\n    \n        response = self.api_client.auth_login_cookies(data=data)\n    \n>       assert response.status_code == 401, \"\"\"Код ответа приложения должен быть 401... Здесь что-то странное: отвечать\n                                             200 - на неудачную авторизацию явно не ок, тем более - куки пустые;\n                                             кроме того бывает,\n                                             когда при неверной комбинации возвраащет 401\"\"\"\nE       AssertionError: Код ответа приложения должен быть 401... Здесь что-то странное: отвечать  \nE                                                      200 - на неудачную авторизацию явно не ок, тем более - куки пустые; \nE                                                      кроме того бывает, \nE                                                      когда при неверной комбинации возвраащет 401\nE       assert 200 == 401\nE         +200\nE         -401\n\ndata       = {'password': 'beast', 'username': 'nik'}\nlogin      = 'nik'\npassword   = 'beast'\nresponse   = <Response [200]>\nself       = <test_api.TestApiUnauthorizedUser object at 0x7f2ac39a8a60>\n\ncode/api_myapp/test/test_api.py:935: AssertionError"}, "description": "\n         Тестирование: Авторизация с помощью неверных данных\n         Эндпоинт: POST http://127.0.0.1:8086/login\n         Предусловия: Пользователь не авторизован, для авторизации используется неверная комбинация логина/пароля;\n         рассмотреть варианты, когда логин/пароль действительно существуют в БД, однако второй элемент из комбинации\n         - нет\n         Шаги:\n         1. Отправить запрос по API для авторизации - POST http://127.0.0.1:8086/login\n         Ожидаемый результат:\n         Код ответа - 401 (\"UNAUTHORIZED\") (-)\n         Пользователь не сумел авторизоваться, сервер возвращает адекватную ошибку и сообщение (-)\n         Фактический результат:\n         Код ответа - 200 (\"OK\") (-)\n         Пользователь не сумел авторизоваться, сервер возвращает адекватную ошибку и сообщение (-)\n         ", "steps": [{"name": "Авторизуемся по стабильным данным - выполянем POST запрос /login", "status": "passed", "steps": [{"name": "Выполняем запрос", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'/login'"}, {"name": "headers", "value": "{}"}, {"name": "data", "value": "{'username': 'nik', 'password': 'beast'}"}, {"name": "params", "value": "None"}, {"name": "json", "value": "False"}], "start": 1653170954064, "stop": 1653170954069}], "parameters": [{"name": "data", "value": "{'username': 'nik', 'password': 'beast'}"}], "start": 1653170954064, "stop": 1653170954069}], "parameters": [{"name": "login", "value": "'nik'"}, {"name": "password", "value": "'beast'"}], "start": 1653170954064, "stop": 1653170954070, "uuid": "9fcd0cd6-6a55-46b4-a6a1-2ddb1a539b9c", "historyId": "456450d69c116de621ee101518289c3d", "testCaseId": "3197c56f71d1cb93ae55ac2d037b5f34", "fullName": "code.api_myapp.test.test_api.TestApiUnauthorizedUser#test_post_auth_invalid_data_bug", "labels": [{"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "code.api_myapp.test"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiUnauthorizedUser"}, {"name": "host", "value": "e0ab77369360"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.api_myapp.test.test_api"}]}