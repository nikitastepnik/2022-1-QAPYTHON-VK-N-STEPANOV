{"name": "Страница регистрации. Минимальная длина email", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Минимально д...та сейчас: 5.' == 'Please lengt... characters).'\n  - Please lengthen this text to 6 characters or more (you are currently using 5 characters).\n  + Минимально допустимое количество символов: 6. Длина текста сейчас: 5.", "trace": "self = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f2d21a04970>\ncreate_user_data_with_middle_name = {'email': 'k@k.f', 'middle_name': 'JefferyOlson', 'name': 'Jeffery', 'password': 'ILcToUlhLctOI5m', ...}\n\n    @allure.title('Страница регистрации. Минимальная длина email')\n    @pytest.mark.UI\n    def test_reg_page_validation_min_length_email(self, create_user_data_with_middle_name):\n        \"\"\"\n          Тестирование: Регистрация. Длина email меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что email меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg\n          2. Показывается pop-up, уведомляющий о том, что email меньше мин. длины\n          3. Пользователь с указанными данными не создается в БД\n        \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data[\"email\"] = 'k@k.f'\n        len_email_as_str = str(len(complex_user_data[\"email\"]))\n        self.registration_page.registration(complex_user_data)\n        self.mysql.session.commit()\n    \n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['username']).first()\n    \n        assert self.driver.current_url == self.registration_page.url, f\"URL должен быть 'http://{APP_HOST}:{APP_PORT}/reg'\"\n>       assert f'Минимально допустимое количество символов: 6. Длина текста сейчас: {len_email_as_str}.' == \\\n               self.registration_page.find_pop_up_empty_req_field(RegistrationPageLocators.QUERY_PLACEHOLDER_EMAIL)\nE       AssertionError: assert 'Минимально д...та сейчас: 5.' == 'Please lengt... characters).'\nE         - Please lengthen this text to 6 characters or more (you are currently using 5 characters).\nE         + Минимально допустимое количество символов: 6. Длина текста сейчас: 5.\n\ncomplex_user_data = {'email': 'k@k.f', 'middle_name': 'JefferyOlson', 'name': 'Jeffery', 'password': 'ILcToUlhLctOI5m', ...}\ncreate_user_data_with_middle_name = {'email': 'k@k.f', 'middle_name': 'JefferyOlson', 'name': 'Jeffery', 'password': 'ILcToUlhLctOI5m', ...}\nlen_email_as_str = '5'\nself       = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f2d21a04970>\nuser_db    = None\n\ncode/ui_myapp/tests/test_ui.py:583: AssertionError"}, "description": "\n          Тестирование: Регистрация. Длина email меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что email меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg\n          2. Показывается pop-up, уведомляющий о том, что email меньше мин. длины\n          3. Пользователь с указанными данными не создается в БД\n        ", "steps": [{"name": "Попытка зарегистрироваться", "status": "passed", "steps": [{"name": "Переходим на необходимую страницу", "status": "passed", "parameters": [{"name": "timeout", "value": "15"}], "start": 1653248982033, "stop": 1653248982069}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248982069, "stop": 1653248982620}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "query", "value": "'m9R8Fh5prNtj'"}, {"name": "timeout", "value": "None"}], "start": 1653248982069, "stop": 1653248982728}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248982728, "stop": 1653248982755}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "query", "value": "'ILcToUlhLctOI5m'"}, {"name": "timeout", "value": "None"}], "start": 1653248982728, "stop": 1653248982878}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248982879, "stop": 1653248982902}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "query", "value": "'ILcToUlhLctOI5m'"}, {"name": "timeout", "value": "None"}], "start": 1653248982878, "stop": 1653248983029}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983030, "stop": 1653248983061}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "query", "value": "'Jeffery'"}, {"name": "timeout", "value": "None"}], "start": 1653248983030, "stop": 1653248983176}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983177, "stop": 1653248983200}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "query", "value": "'Olson'"}, {"name": "timeout", "value": "None"}], "start": 1653248983176, "stop": 1653248983305}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983305, "stop": 1653248983329}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "query", "value": "'k@k.f'"}, {"name": "timeout", "value": "None"}], "start": 1653248983305, "stop": 1653248983423}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983423, "stop": 1653248983444}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983423, "stop": 1653248983516}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983516, "stop": 1653248983535}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983516, "stop": 1653248983601}], "parameters": [{"name": "data", "value": "{'username': 'm9R8Fh5prNtj', 'password': 'ILcToUlhLctOI5m', 'email': 'k@k.f', 'name': 'Jeffery', 'surname': 'Olson', 'middle_name': 'JefferyOlson'}"}, {"name": "middle_name_option", "value": "0"}, {"name": "empty_rep_password_option", "value": "0"}, {"name": "rep_password", "value": "0"}, {"name": "checkbox_option", "value": "1"}], "start": 1653248981823, "stop": 1653248983601}, {"name": "Смотрим pop-up validationMessage при пустом поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248983609, "stop": 1653248983629}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}], "start": 1653248983609, "stop": 1653248983644}], "start": 1653248981823, "stop": 1653248983645, "uuid": "0e2e5ec0-7b41-458a-8c12-b1ba49a00482", "historyId": "709dd9d1c41c05b5cfbbd9a02c5a00df", "testCaseId": "92698da95ec58e7eb101062a1d86a4ce", "fullName": "code.ui_myapp.tests.test_ui.TestUIUnauthorizedUserRegistrationPage#test_reg_page_validation_min_length_email", "labels": [{"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "code.ui_myapp.tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUIUnauthorizedUserRegistrationPage"}, {"name": "host", "value": "5714f18fffa8"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.ui_myapp.tests.test_ui"}]}