{"name": "Страница регистрации. Pop-up \"Email already exists\" при повторении username", "status": "failed", "statusDetails": {"message": "AssertionError: Должен быть такой pop-up!\nassert 'Internal Server Error' == 'Email already exists'\n  - Email already exists\n  + Internal Server Error", "trace": "self = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f2d21a67f70>\ncreate_user_data_with_middle_name = {'email': 'nik-stepanov-2001@bk.ru', 'middle_name': 'TravisGlenn', 'name': 'Travis', 'password': 'O5miqioi2CEe', ...}\n\n    @allure.title('Страница регистрации. Pop-up \"Email already exists\" при повторении username')\n    @pytest.mark.UI\n    def test_reg_page_validation_already_used_email_bug(self, create_user_data_with_middle_name):\n        \"\"\"\n          Тестирование: Регистрация. Email уже добавлен ранее в БД\n          Предусловия: Сгенерировать валидные данные, заменить username на\n          использованный ранее\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что email уже\n          используется (-)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, о INTERNAL SERVER ERROR\n          3. Пользователь с указанными данными не создается в БД (+)\n        \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data['email'] = 'nik-stepanov-2001@bk.ru'\n        self.registration_page.registration(complex_user_data)\n        self.mysql.session.commit()\n    \n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['username']).first()\n    \n        assert self.driver.current_url == self.registration_page.url, f\"URL должен быть 'http://{APP_HOST}:{APP_PORT}/reg'\"\n>       assert self.registration_page.find_pop_up_text(\n            RegistrationPageLocators.QUERY_EMAIL_ALREADY_EXISTS) == \"Email already exists\", \"Должен быть такой pop-up!\"\nE       AssertionError: Должен быть такой pop-up!\nE       assert 'Internal Server Error' == 'Email already exists'\nE         - Email already exists\nE         + Internal Server Error\n\ncomplex_user_data = {'email': 'nik-stepanov-2001@bk.ru', 'middle_name': 'TravisGlenn', 'name': 'Travis', 'password': 'O5miqioi2CEe', ...}\ncreate_user_data_with_middle_name = {'email': 'nik-stepanov-2001@bk.ru', 'middle_name': 'TravisGlenn', 'name': 'Travis', 'password': 'O5miqioi2CEe', ...}\nself       = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f2d21a67f70>\nuser_db    = None\n\ncode/ui_myapp/tests/test_ui.py:520: AssertionError"}, "description": "\n          Тестирование: Регистрация. Email уже добавлен ранее в БД\n          Предусловия: Сгенерировать валидные данные, заменить username на\n          использованный ранее\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что email уже\n          используется (-)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, о INTERNAL SERVER ERROR\n          3. Пользователь с указанными данными не создается в БД (+)\n        ", "steps": [{"name": "Попытка зарегистрироваться", "status": "passed", "steps": [{"name": "Переходим на необходимую страницу", "status": "passed", "parameters": [{"name": "timeout", "value": "15"}], "start": 1653248973491, "stop": 1653248973504}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248973505, "stop": 1653248974063}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "query", "value": "'vwFSum0I'"}, {"name": "timeout", "value": "None"}], "start": 1653248973505, "stop": 1653248974208}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248974208, "stop": 1653248974232}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "query", "value": "'O5miqioi2CEe'"}, {"name": "timeout", "value": "None"}], "start": 1653248974208, "stop": 1653248974344}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248974344, "stop": 1653248974367}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "query", "value": "'O5miqioi2CEe'"}, {"name": "timeout", "value": "None"}], "start": 1653248974344, "stop": 1653248974477}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248974477, "stop": 1653248974522}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "query", "value": "'Travis'"}, {"name": "timeout", "value": "None"}], "start": 1653248974477, "stop": 1653248974717}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248974717, "stop": 1653248974746}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "query", "value": "'Glenn'"}, {"name": "timeout", "value": "None"}], "start": 1653248974717, "stop": 1653248974844}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653248974844, "stop": 1653248974867}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "query", "value": "'nik-stepanov-2001@bk.ru'"}, {"name": "timeout", "value": "None"}], "start": 1653248974844, "stop": 1653248974977}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248974977, "stop": 1653248975003}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248974977, "stop": 1653248975117}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248975117, "stop": 1653248975142}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653248975117, "stop": 1653248975364}], "parameters": [{"name": "data", "value": "{'username': 'vwFSum0I', 'password': 'O5miqioi2CEe', 'email': 'nik-stepanov-2001@bk.ru', 'name': 'Travis', 'surname': 'Glenn', 'middle_name': 'TravisGlenn'}"}, {"name": "middle_name_option", "value": "0"}, {"name": "empty_rep_password_option", "value": "0"}, {"name": "rep_password", "value": "0"}, {"name": "checkbox_option", "value": "1"}], "start": 1653248973272, "stop": 1653248975364}, {"name": "Смотрим pop-up text при пустом поле ", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//div[contains(text(), 'Internal Server Error')]\")"}, {"name": "timeout", "value": "None"}], "start": 1653248975373, "stop": 1653248975917}], "parameters": [{"name": "locator", "value": "('xpath', \"//div[contains(text(), 'Internal Server Error')]\")"}], "start": 1653248975373, "stop": 1653248975929}], "start": 1653248973271, "stop": 1653248975930, "uuid": "abcc2e0c-df56-404e-83c8-5f519101a350", "historyId": "d63007d2bcd9100b93a26cf18c69f93b", "testCaseId": "b5236526756a5587844b493a6aba7075", "fullName": "code.ui_myapp.tests.test_ui.TestUIUnauthorizedUserRegistrationPage#test_reg_page_validation_already_used_email_bug", "labels": [{"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "code.ui_myapp.tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUIUnauthorizedUserRegistrationPage"}, {"name": "host", "value": "5714f18fffa8"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.ui_myapp.tests.test_ui"}]}