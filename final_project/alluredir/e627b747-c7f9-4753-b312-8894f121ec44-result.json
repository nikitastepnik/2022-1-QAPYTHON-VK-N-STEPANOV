{"name": "Страница регистрации. Pop-up \"заполните это поле\" при пустом Name", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Please fill out this field.' == 'Заполните это поле.'\n  - Заполните это поле.\n  + Please fill out this field.", "trace": "self = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f8e24cf42e0>\ncreate_user_data_with_middle_name = {'email': 'qKsghN0Zj17R@gmail.com', 'middle_name': 'RebeccaHansen', 'password': 'yjpxrMZClw7uiqQ3', 'surname': 'Hansen', ...}\n\n    @allure.title('Страница регистрации. Pop-up \"заполните это поле\" при пустом Name')\n    @pytest.mark.UI\n    def test_reg_page_validation_empty_name(self, create_user_data_with_middle_name):\n        \"\"\"\n        Тестирование: Регистрация. Пустое поле name\n        Предусловия: Сгенерировать валидные данные\n        Шаги:\n        1. Заполнить через UI все поля регистрации, кроме name\n        2. Нажать на чекбокс\n        Ожидаемый результат:\n        1. Пользователь остается на странице /reg (+)\n        2. Показывается pop-up, уведомляющий о пустом поле name (+)\n        3. Пользователь с указанными данными не создается в БД (+)\n        Фактический результат:\n        1. Пользователь остается на странцие /reg\n        2. Показывается pop-up, уведомляющий о пустом поле name\n        3. Пользователь с указанными данными не создается в БД\n        \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data.pop(\"name\")\n        self.registration_page.registration(complex_user_data)\n        self.mysql.session.commit()\n    \n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['email']).first()\n    \n        assert self.driver.current_url == self.registration_page.url, f\"URL должен быть 'http://{APP_HOST}:{APP_PORT}/reg'\"\n>       assert self.registration_page.find_pop_up_empty_req_field(RegistrationPageLocators.QUERY_PLACEHOLDER_NAME) == \\\n               \"Заполните это поле.\"\nE       AssertionError: assert 'Please fill out this field.' == 'Заполните это поле.'\nE         - Заполните это поле.\nE         + Please fill out this field.\n\ncomplex_user_data = {'email': 'qKsghN0Zj17R@gmail.com', 'middle_name': 'RebeccaHansen', 'password': 'yjpxrMZClw7uiqQ3', 'surname': 'Hansen', ...}\ncreate_user_data_with_middle_name = {'email': 'qKsghN0Zj17R@gmail.com', 'middle_name': 'RebeccaHansen', 'password': 'yjpxrMZClw7uiqQ3', 'surname': 'Hansen', ...}\nself       = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f8e24cf42e0>\nuser_db    = None\n\ncode/ui_myapp/tests/test_ui.py:274: AssertionError"}, "description": "\n        Тестирование: Регистрация. Пустое поле name\n        Предусловия: Сгенерировать валидные данные\n        Шаги:\n        1. Заполнить через UI все поля регистрации, кроме name\n        2. Нажать на чекбокс\n        Ожидаемый результат:\n        1. Пользователь остается на странице /reg (+)\n        2. Показывается pop-up, уведомляющий о пустом поле name (+)\n        3. Пользователь с указанными данными не создается в БД (+)\n        Фактический результат:\n        1. Пользователь остается на странцие /reg\n        2. Показывается pop-up, уведомляющий о пустом поле name\n        3. Пользователь с указанными данными не создается в БД\n        ", "steps": [{"name": "Попытка зарегистрироваться", "status": "passed", "steps": [{"name": "Переходим на необходимую страницу", "status": "passed", "parameters": [{"name": "timeout", "value": "15"}], "start": 1653232226457, "stop": 1653232226472}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232226472, "stop": 1653232227046}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "query", "value": "'J6qbBUJ'"}, {"name": "timeout", "value": "None"}], "start": 1653232226472, "stop": 1653232227235}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232227235, "stop": 1653232227273}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "query", "value": "'yjpxrMZClw7uiqQ3'"}, {"name": "timeout", "value": "None"}], "start": 1653232227235, "stop": 1653232227478}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232227478, "stop": 1653232227517}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "query", "value": "'yjpxrMZClw7uiqQ3'"}, {"name": "timeout", "value": "None"}], "start": 1653232227478, "stop": 1653232227709}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232227710, "stop": 1653232227745}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232227709, "stop": 1653232227904}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232227904, "stop": 1653232227936}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232227904, "stop": 1653232228110}], "parameters": [{"name": "data", "value": "{'username': 'J6qbBUJ', 'password': 'yjpxrMZClw7uiqQ3', 'email': 'qKsghN0Zj17R@gmail.com', 'surname': 'Hansen', 'middle_name': 'RebeccaHansen'}"}, {"name": "middle_name_option", "value": "0"}, {"name": "empty_rep_password_option", "value": "0"}, {"name": "rep_password", "value": "0"}, {"name": "checkbox_option", "value": "1"}], "start": 1653232226163, "stop": 1653232228110}, {"name": "Смотрим pop-up validationMessage при пустом поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232228132, "stop": 1653232228212}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}], "start": 1653232228132, "stop": 1653232228239}], "start": 1653232226162, "stop": 1653232228239, "uuid": "d3881c23-df04-45e0-a2f5-e3f6cd6eaadf", "historyId": "487185ca12fe3354d62fc18d6af6dbdc", "testCaseId": "d6857a28c17ccffb08926d275db75d04", "fullName": "code.ui_myapp.tests.test_ui.TestUIUnauthorizedUserRegistrationPage#test_reg_page_validation_empty_name", "labels": [{"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "code.ui_myapp.tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUIUnauthorizedUserRegistrationPage"}, {"name": "host", "value": "c88be2a1ec91"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.ui_myapp.tests.test_ui"}]}