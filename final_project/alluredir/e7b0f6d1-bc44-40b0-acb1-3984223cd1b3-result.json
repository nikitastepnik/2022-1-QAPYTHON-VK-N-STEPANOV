{"name": "Проверка создания пользователя без middle-name", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'username'", "trace": "self = <test_api.TestApiAuthorizedUser object at 0x7f1d87d9af10>\ncreate_user_data_without_middle_name = {'email': 'OriIIsp5@mail.ru', 'name': 'Lisa', 'password': 'gVbjyIkIcu', 'surname': 'Taylor', ...}\n\n    @allure.title(\"Проверка создания пользователя без middle-name\")\n    @pytest.mark.API\n    def test_post_create_user_without_middle_name_bug(self, create_user_data_without_middle_name):\n        \"\"\"\n         Тестирование: Добавление пользователя (без middle-name)\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных\n         Шаги:\n         1. Отправка запроса по API\n         2. Найти пользователя по email в БД\n         3. Удалить из БД раннее созданного пользователя\n         Ожидаемый результат:\n         Пользователь добавляется в БД с корректными данными (+)\n         Код ответа - 201 (\"Created\") (-)\n         Фактический результат:\n         Пользователь добавляется в БД с корректными данными\n         Код ответа - 210\n         \"\"\"\n        complex_user_data = create_user_data_without_middle_name\n        self.mysql.session.commit()\n        response = self.post_create_user(complex_user_data)\n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['email']).first()\n    \n        self.delete_user(complex_user_data[\"username\"])\n    \n>       assert user_db.username == complex_user_data['username'], f\"Никнеймы не совпадают: В БД {user_db.username}; \" \\\n                                                                  f\"Отправлено в request body \" \\\n                                                                  f\"{complex_user_data['username']}\"\nE       AttributeError: 'NoneType' object has no attribute 'username'\n\ncomplex_user_data = {'email': 'OriIIsp5@mail.ru', 'name': 'Lisa', 'password': 'gVbjyIkIcu', 'surname': 'Taylor', ...}\ncreate_user_data_without_middle_name = {'email': 'OriIIsp5@mail.ru', 'name': 'Lisa', 'password': 'gVbjyIkIcu', 'surname': 'Taylor', ...}\nresponse   = <Response [401]>\nself       = <test_api.TestApiAuthorizedUser object at 0x7f1d87d9af10>\nuser_db    = None\n\ncode/api_myapp/test/test_api.py:59: AttributeError"}, "description": "\n         Тестирование: Добавление пользователя (без middle-name)\n         Эндпоинт: POST http://127.0.0.1:8086/api/user\n         Предусловия: Авторизация, создание пользовательских данных\n         Шаги:\n         1. Отправка запроса по API\n         2. Найти пользователя по email в БД\n         3. Удалить из БД раннее созданного пользователя\n         Ожидаемый результат:\n         Пользователь добавляется в БД с корректными данными (+)\n         Код ответа - 201 (\"Created\") (-)\n         Фактический результат:\n         Пользователь добавляется в БД с корректными данными\n         Код ответа - 210\n         ", "steps": [{"name": "Выполняем POST запрос '/api/user'", "status": "passed", "steps": [{"name": "Выполняем запрос", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'/api/user'"}, {"name": "headers", "value": "{'Content-Type': 'application/json'}"}, {"name": "data", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "{'username': 'Tf73oHMFVSwk', 'password': 'gVbjyIkIcu', 'email': 'OriIIsp5@mail.ru', 'name': 'Lisa', 'surname': 'Taylor'}"}], "start": 1653169728372, "stop": 1653169728379}], "parameters": [{"name": "complex_data", "value": "{'username': 'Tf73oHMFVSwk', 'password': 'gVbjyIkIcu', 'email': 'OriIIsp5@mail.ru', 'name': 'Lisa', 'surname': 'Taylor'}"}], "start": 1653169728372, "stop": 1653169728379}, {"name": "Выполняем DELETE запрос '/api/user/'Tf73oHMFVSwk''", "status": "passed", "steps": [{"name": "Выполняем запрос", "status": "passed", "parameters": [{"name": "method", "value": "'DELETE'"}, {"name": "location", "value": "'/api/user/Tf73oHMFVSwk'"}, {"name": "headers", "value": "None"}, {"name": "data", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "False"}], "start": 1653169728388, "stop": 1653169728393}], "parameters": [{"name": "username", "value": "'Tf73oHMFVSwk'"}], "start": 1653169728388, "stop": 1653169728393}], "start": 1653169728371, "stop": 1653169728394, "uuid": "5c0df23c-ec63-4d51-bdd8-0ca3b0b15560", "historyId": "7b6f29966895bbbfc73b99f7afd8e183", "testCaseId": "ae17145993cbc2d5685269c631f97934", "fullName": "code.api_myapp.test.test_api.TestApiAuthorizedUser#test_post_create_user_without_middle_name_bug", "labels": [{"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "code.api_myapp.test"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiAuthorizedUser"}, {"name": "host", "value": "746153c29c11"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.api_myapp.test.test_api"}]}