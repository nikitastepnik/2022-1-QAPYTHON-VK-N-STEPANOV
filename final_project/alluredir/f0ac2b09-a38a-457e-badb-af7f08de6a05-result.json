{"name": "Страница регистрации. Минимальная длина email", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Минимально д...та сейчас: 5.' == 'Please lengt... characters).'\n  - Please lengthen this text to 6 characters or more (you are currently using 5 characters).\n  + Минимально допустимое количество символов: 6. Длина текста сейчас: 5.", "trace": "self = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f8e24cfbbb0>\ncreate_user_data_with_middle_name = {'email': 'k@k.f', 'middle_name': 'JoanneJohnson', 'name': 'Joanne', 'password': 'yj2GsB', ...}\n\n    @allure.title('Страница регистрации. Минимальная длина email')\n    @pytest.mark.UI\n    def test_reg_page_validation_min_length_email(self, create_user_data_with_middle_name):\n        \"\"\"\n          Тестирование: Регистрация. Длина email меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что email меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg\n          2. Показывается pop-up, уведомляющий о том, что email меньше мин. длины\n          3. Пользователь с указанными данными не создается в БД\n        \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data[\"email\"] = 'k@k.f'\n        len_email_as_str = str(len(complex_user_data[\"email\"]))\n        self.registration_page.registration(complex_user_data)\n        self.mysql.session.commit()\n    \n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['username']).first()\n    \n        assert self.driver.current_url == self.registration_page.url, f\"URL должен быть 'http://{APP_HOST}:{APP_PORT}/reg'\"\n>       assert f'Минимально допустимое количество символов: 6. Длина текста сейчас: {len_email_as_str}.' == \\\n               self.registration_page.find_pop_up_empty_req_field(RegistrationPageLocators.QUERY_PLACEHOLDER_EMAIL)\nE       AssertionError: assert 'Минимально д...та сейчас: 5.' == 'Please lengt... characters).'\nE         - Please lengthen this text to 6 characters or more (you are currently using 5 characters).\nE         + Минимально допустимое количество символов: 6. Длина текста сейчас: 5.\n\ncomplex_user_data = {'email': 'k@k.f', 'middle_name': 'JoanneJohnson', 'name': 'Joanne', 'password': 'yj2GsB', ...}\ncreate_user_data_with_middle_name = {'email': 'k@k.f', 'middle_name': 'JoanneJohnson', 'name': 'Joanne', 'password': 'yj2GsB', ...}\nlen_email_as_str = '5'\nself       = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f8e24cfbbb0>\nuser_db    = None\n\ncode/ui_myapp/tests/test_ui.py:583: AssertionError"}, "description": "\n          Тестирование: Регистрация. Длина email меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что email меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg\n          2. Показывается pop-up, уведомляющий о том, что email меньше мин. длины\n          3. Пользователь с указанными данными не создается в БД\n        ", "steps": [{"name": "Попытка зарегистрироваться", "status": "passed", "steps": [{"name": "Переходим на необходимую страницу", "status": "passed", "parameters": [{"name": "timeout", "value": "15"}], "start": 1653232274768, "stop": 1653232274815}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232274816, "stop": 1653232275391}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "query", "value": "'wBYg1ZPFerVO'"}, {"name": "timeout", "value": "None"}], "start": 1653232274816, "stop": 1653232275586}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232275586, "stop": 1653232275620}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "query", "value": "'yj2GsB'"}, {"name": "timeout", "value": "None"}], "start": 1653232275586, "stop": 1653232275824}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232275824, "stop": 1653232275858}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "query", "value": "'yj2GsB'"}, {"name": "timeout", "value": "None"}], "start": 1653232275824, "stop": 1653232276040}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232276041, "stop": 1653232276081}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "query", "value": "'Joanne'"}, {"name": "timeout", "value": "None"}], "start": 1653232276041, "stop": 1653232276265}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232276265, "stop": 1653232276308}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "query", "value": "'Johnson'"}, {"name": "timeout", "value": "None"}], "start": 1653232276265, "stop": 1653232276491}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232276492, "stop": 1653232276532}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "query", "value": "'k@k.f'"}, {"name": "timeout", "value": "None"}], "start": 1653232276491, "stop": 1653232276776}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232276776, "stop": 1653232276808}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232276776, "stop": 1653232276957}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232276958, "stop": 1653232276996}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232276958, "stop": 1653232277120}], "parameters": [{"name": "data", "value": "{'username': 'wBYg1ZPFerVO', 'password': 'yj2GsB', 'email': 'k@k.f', 'name': 'Joanne', 'surname': 'Johnson', 'middle_name': 'JoanneJohnson'}"}, {"name": "middle_name_option", "value": "0"}, {"name": "empty_rep_password_option", "value": "0"}, {"name": "rep_password", "value": "0"}, {"name": "checkbox_option", "value": "1"}], "start": 1653232274492, "stop": 1653232277121}, {"name": "Смотрим pop-up validationMessage при пустом поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232277137, "stop": 1653232277166}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}], "start": 1653232277137, "stop": 1653232277190}], "start": 1653232274491, "stop": 1653232277191, "uuid": "94561280-c3e9-485c-b884-5efe8ebe7176", "historyId": "709dd9d1c41c05b5cfbbd9a02c5a00df", "testCaseId": "92698da95ec58e7eb101062a1d86a4ce", "fullName": "code.ui_myapp.tests.test_ui.TestUIUnauthorizedUserRegistrationPage#test_reg_page_validation_min_length_email", "labels": [{"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "code.ui_myapp.tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUIUnauthorizedUserRegistrationPage"}, {"name": "host", "value": "c88be2a1ec91"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.ui_myapp.tests.test_ui"}]}