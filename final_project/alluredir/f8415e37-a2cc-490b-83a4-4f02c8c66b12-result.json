{"name": "Страница регистрации. Валидные данные (c middle-name). Успешная регистрация", "status": "failed", "statusDetails": {"message": "AssertionError: Отчества не совпадают: В БД None; Отправлено в request body DylanLyons\nassert None == 'DylanLyons'\n  +None\n  -'DylanLyons'", "trace": "self = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f8e24cedf70>\ncreate_user_data_with_middle_name = {'email': 'aU81FMNOBCv@bk.ru', 'middle_name': 'DylanLyons', 'name': 'Dylan', 'password': 'rhnGwZSedDU1b5j9', ...}\n\n    @allure.title('Страница регистрации. Валидные данные (c middle-name). Успешная регистрация')\n    @pytest.mark.UI\n    def test_reg_page_success_with_middle_name_bug(self, create_user_data_with_middle_name):\n        \"\"\"\n        Тестирование: Регистрация. Валидные данные\n        Предусловия: Сгенерировать валидные данные\n        Шаги:\n        1. Заполнить через UI все поля регистрации\n        2. Нажать на чекбокс\n        Ожидаемый результат:\n        1. Пользователю открывается страница /welcome (+)\n        2. Пользователь с указанными данными создается в БД (-)\n        Фактический результат:\n        1. Пользователю открывается страница /welcome\n        2. Пользователь с указанными данными создается в БД\n        \"\"\"\n    \n        complex_user_data = create_user_data_with_middle_name\n        self.registration_page.registration(complex_user_data, middle_name_option=1)\n        self.mysql.session.commit()\n    \n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['email']).first()\n    \n        assert user_db.username == complex_user_data['username'], f\"Никнеймы не совпадают: В БД {user_db.username}; \" \\\n                                                                  f\"Отправлено в request body \" \\\n                                                                  f\"{complex_user_data['username']}\"\n        assert user_db.password == complex_user_data['password'], f\"Пароли не совпадают: В БД {user_db.password}; \" \\\n                                                                  f\"Отправлено в request body \" \\\n                                                                  f\"{complex_user_data['password']}\"\n        assert user_db.email == complex_user_data['email'], f\"Почтовые адреса не совпадают: В БД {user_db.email}; \" \\\n                                                            f\"Отправлено в request body \" \\\n                                                            f\"{complex_user_data['email']}\"\n        assert user_db.name == complex_user_data['name'], f\"Имена не совпадают: В БД {user_db.name}; \" \\\n                                                          f\"Отправлено в request body \" \\\n                                                          f\"{complex_user_data['name']}\"\n        assert user_db.surname == complex_user_data['surname'], f\"Фамилии не совпадают: В БД {user_db.surname}; \" \\\n                                                                f\"Отправлено в request body \" \\\n                                                                f\"{complex_user_data['surname']}\"\n    \n        assert user_db.access == 1, \"Access по умолчанию должен быть равен 1!\"\n        assert user_db.active == 0, \"Active по умолчанию должен быть равен 0!\"\n        assert self.driver.current_url == WelcomePage.url, f\"URL должен быть 'http://{APP_HOST}:{APP_PORT}/welcome/'\"\n>       assert user_db.middle_name == complex_user_data['middle_name'], f\"Отчества не совпадают: В БД\" \\\n                                                                        f\" {user_db.middle_name}; \" \\\n                                                                        f\"Отправлено в request body \" \\\n                                                                        f\"{complex_user_data['middle_name']}\"\nE       AssertionError: Отчества не совпадают: В БД None; Отправлено в request body DylanLyons\nE       assert None == 'DylanLyons'\nE         +None\nE         -'DylanLyons'\n\ncomplex_user_data = {'email': 'aU81FMNOBCv@bk.ru', 'middle_name': 'DylanLyons', 'name': 'Dylan', 'password': 'rhnGwZSedDU1b5j9', ...}\ncreate_user_data_with_middle_name = {'email': 'aU81FMNOBCv@bk.ru', 'middle_name': 'DylanLyons', 'name': 'Dylan', 'password': 'rhnGwZSedDU1b5j9', ...}\nself       = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f8e24cedf70>\nuser_db    = <test_users(id='27',username='6yqSn3akKQFztc',name='Dylan',surname='Lyons',surname='None',password='rhnGwZSedDU1b5j9',email='aU81FMNOBCv@bk.ru',access='1',active='0',start_active_time='None')>\n\ncode/ui_myapp/tests/test_ui.py:199: AssertionError"}, "description": "\n        Тестирование: Регистрация. Валидные данные\n        Предусловия: Сгенерировать валидные данные\n        Шаги:\n        1. Заполнить через UI все поля регистрации\n        2. Нажать на чекбокс\n        Ожидаемый результат:\n        1. Пользователю открывается страница /welcome (+)\n        2. Пользователь с указанными данными создается в БД (-)\n        Фактический результат:\n        1. Пользователю открывается страница /welcome\n        2. Пользователь с указанными данными создается в БД\n        ", "steps": [{"name": "Попытка зарегистрироваться", "status": "passed", "steps": [{"name": "Переходим на необходимую страницу", "status": "passed", "parameters": [{"name": "timeout", "value": "15"}], "start": 1653232214799, "stop": 1653232214855}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232214855, "stop": 1653232215432}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "query", "value": "'6yqSn3akKQFztc'"}, {"name": "timeout", "value": "None"}], "start": 1653232214855, "stop": 1653232215641}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232215641, "stop": 1653232215680}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "query", "value": "'rhnGwZSedDU1b5j9'"}, {"name": "timeout", "value": "None"}], "start": 1653232215641, "stop": 1653232215906}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232215907, "stop": 1653232215942}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "query", "value": "'rhnGwZSedDU1b5j9'"}, {"name": "timeout", "value": "None"}], "start": 1653232215907, "stop": 1653232216156}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Midddleename\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232216156, "stop": 1653232216191}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Midddleename\")]')"}, {"name": "query", "value": "'DylanLyons'"}, {"name": "timeout", "value": "None"}], "start": 1653232216156, "stop": 1653232216372}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232216372, "stop": 1653232216407}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "query", "value": "'Dylan'"}, {"name": "timeout", "value": "None"}], "start": 1653232216372, "stop": 1653232216563}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232216563, "stop": 1653232216595}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "query", "value": "'Lyons'"}, {"name": "timeout", "value": "None"}], "start": 1653232216563, "stop": 1653232216762}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653232216762, "stop": 1653232216800}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "query", "value": "'aU81FMNOBCv@bk.ru'"}, {"name": "timeout", "value": "None"}], "start": 1653232216762, "stop": 1653232217013}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232217013, "stop": 1653232217048}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232217013, "stop": 1653232217203}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232217203, "stop": 1653232217233}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653232217203, "stop": 1653232218114}], "parameters": [{"name": "data", "value": "{'username': '6yqSn3akKQFztc', 'password': 'rhnGwZSedDU1b5j9', 'email': 'aU81FMNOBCv@bk.ru', 'name': 'Dylan', 'surname': 'Lyons', 'middle_name': 'DylanLyons'}"}, {"name": "middle_name_option", "value": "1"}, {"name": "empty_rep_password_option", "value": "0"}, {"name": "rep_password", "value": "0"}, {"name": "checkbox_option", "value": "1"}], "start": 1653232214531, "stop": 1653232218114}], "start": 1653232214530, "stop": 1653232218132, "uuid": "bf8e4f84-e505-4d90-9777-a717ecdbb520", "historyId": "e658201c335349f69d850b58d2401ffe", "testCaseId": "69acf82c65393e129060d8a8096f743f", "fullName": "code.ui_myapp.tests.test_ui.TestUIUnauthorizedUserRegistrationPage#test_reg_page_success_with_middle_name_bug", "labels": [{"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "code.ui_myapp.tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUIUnauthorizedUserRegistrationPage"}, {"name": "host", "value": "c88be2a1ec91"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.ui_myapp.tests.test_ui"}]}