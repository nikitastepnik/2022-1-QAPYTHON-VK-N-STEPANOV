{"name": "Страница регистрации. Минимальная длина username. Этот тест имеет flucky сообщение!", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Минимально д...та сейчас: 1.' == 'Please lengt...1 character).'\n  - Please lengthen this text to 6 characters or more (you are currently using 1 character).\n  + Минимально допустимое количество символов: 6. Длина текста сейчас: 1.", "trace": "self = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f21908ba250>\ncreate_user_data_with_middle_name = {'email': '3ke1i3FlXIS@bk.ru', 'middle_name': 'MaxHutchinson', 'name': 'Max', 'password': 'NkCTpigCb9u', ...}\n\n    @allure.title('Страница регистрации. Минимальная длина username. Этот тест имеет flucky сообщение!')\n    @pytest.mark.UI\n    def test_reg_page_validation_min_length_username_bug(self, create_user_data_with_middle_name):\n        \"\"\"\n          Тестирование: Регистрация. Длина username меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username уже\n          используется (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n        \"\"\"\n        complex_user_data = create_user_data_with_middle_name\n        complex_user_data[\"username\"] = RandomGenerate.generate_random_password(1, 5)\n        len_username_as_str = str(len(complex_user_data[\"username\"]))\n        self.registration_page.registration(complex_user_data)\n        self.mysql.session.commit()\n    \n        user_db = self.mysql.session.query(Users).filter_by(email=complex_user_data['username']).first()\n    \n        assert self.driver.current_url == self.registration_page.url, f\"URL должен быть 'http://{APP_HOST}:{APP_PORT}/reg'\"\n>       assert f'Минимально допустимое количество символов: 6. Длина текста сейчас: {len_username_as_str}.' == \\\n               self.registration_page.find_pop_up_empty_req_field(RegistrationPageLocators.QUERY_PLACEHOLDER_USER_NAME)\nE       AssertionError: assert 'Минимально д...та сейчас: 1.' == 'Please lengt...1 character).'\nE         - Please lengthen this text to 6 characters or more (you are currently using 1 character).\nE         + Минимально допустимое количество символов: 6. Длина текста сейчас: 1.\n\ncomplex_user_data = {'email': '3ke1i3FlXIS@bk.ru', 'middle_name': 'MaxHutchinson', 'name': 'Max', 'password': 'NkCTpigCb9u', ...}\ncreate_user_data_with_middle_name = {'email': '3ke1i3FlXIS@bk.ru', 'middle_name': 'MaxHutchinson', 'name': 'Max', 'password': 'NkCTpigCb9u', ...}\nlen_username_as_str = '1'\nself       = <test_ui.TestUIUnauthorizedUserRegistrationPage object at 0x7f21908ba250>\nuser_db    = None\n\ncode/ui_myapp/tests/test_ui.py:552: AssertionError"}, "description": "\n          Тестирование: Регистрация. Длина username меньше минимальной (6)\n          Предусловия: Сгенерировать валидные данные\n          Шаги:\n          1. Заполнить через UI все поля регистрации\n          Ожидаемый результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username меньше\n          минимальной длины (6) (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n          Фактический результат:\n          1. Пользователь остается на странице /reg (+)\n          2. Показывается pop-up, уведомляющий о том, что username уже\n          используется (+)\n          3. Пользователь с указанными данными не создается в БД (+)\n        ", "steps": [{"name": "Попытка зарегистрироваться", "status": "passed", "steps": [{"name": "Переходим на необходимую страницу", "status": "passed", "parameters": [{"name": "timeout", "value": "15"}], "start": 1653231124358, "stop": 1653231124367}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653231124367, "stop": 1653231124947}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "query", "value": "'z'"}, {"name": "timeout", "value": "None"}], "start": 1653231124367, "stop": 1653231125104}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653231125104, "stop": 1653231125137}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Password\")]')"}, {"name": "query", "value": "'NkCTpigCb9u'"}, {"name": "timeout", "value": "None"}], "start": 1653231125104, "stop": 1653231125345}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653231125345, "stop": 1653231125382}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Repeat password\")]')"}, {"name": "query", "value": "'NkCTpigCb9u'"}, {"name": "timeout", "value": "None"}], "start": 1653231125345, "stop": 1653231125565}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653231125565, "stop": 1653231125601}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Name\")]')"}, {"name": "query", "value": "'Max'"}, {"name": "timeout", "value": "None"}], "start": 1653231125565, "stop": 1653231125758}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653231125758, "stop": 1653231125795}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Surname\")]')"}, {"name": "query", "value": "'Hutchinson'"}, {"name": "timeout", "value": "None"}], "start": 1653231125758, "stop": 1653231125984}, {"name": "Очищаем и заполняем поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653231125985, "stop": 1653231126019}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Email\")]')"}, {"name": "query", "value": "'3ke1i3FlXIS@bk.ru'"}, {"name": "timeout", "value": "None"}], "start": 1653231125985, "stop": 1653231126217}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653231126217, "stop": 1653231126251}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"checkbox\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653231126217, "stop": 1653231126390}, {"name": "Кликаем по полю", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653231126390, "stop": 1653231126425}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@type=\"submit\"]')"}, {"name": "timeout", "value": "None"}], "start": 1653231126390, "stop": 1653231126565}], "parameters": [{"name": "data", "value": "{'username': 'z', 'password': 'NkCTpigCb9u', 'email': '3ke1i3FlXIS@bk.ru', 'name': 'Max', 'surname': 'Hutchinson', 'middle_name': 'MaxHutchinson'}"}, {"name": "middle_name_option", "value": "0"}, {"name": "empty_rep_password_option", "value": "0"}, {"name": "rep_password", "value": "0"}, {"name": "checkbox_option", "value": "1"}], "start": 1653231124052, "stop": 1653231126565}, {"name": "Смотрим pop-up validationMessage при пустом поле", "status": "passed", "steps": [{"name": "Ждем существования и видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}, {"name": "timeout", "value": "None"}], "start": 1653231126580, "stop": 1653231126607}], "parameters": [{"name": "locator", "value": "('xpath', '//input[contains(@placeholder, \"Username\")]')"}], "start": 1653231126580, "stop": 1653231126629}], "start": 1653231124052, "stop": 1653231126630, "uuid": "1c653f8e-78c9-4111-83e1-f400a7b3abda", "historyId": "9322e5e7c61011e4dacda4f2e2bfddf9", "testCaseId": "dbba37b9fd190f59b8c837570f35f93c", "fullName": "code.ui_myapp.tests.test_ui.TestUIUnauthorizedUserRegistrationPage#test_reg_page_validation_min_length_username_bug", "labels": [{"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "code.ui_myapp.tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUIUnauthorizedUserRegistrationPage"}, {"name": "host", "value": "c88be2a1ec91"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.ui_myapp.tests.test_ui"}]}